name: Build Backend

on:
  push:
    branches: [dev, master]

  workflow_dispatch:

env:
  DOCKER_SERVER: registry.cn-hangzhou.aliyuncs.com
  DOCKER_NAMESPACE: neal2034
  DOCKER_REPOSITORY: todo-backend

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    if: contains(github.event.commits[0].message, 'skip build') == false
    outputs:
      image: ${{ steps.set-image.outputs.image }}
      tags: ${{ steps.meta.outputs.tags }}
    steps:
      - uses: actions/checkout@v3

      - uses: docker/metadata-action@v4
        id: meta
        with:
          flavor: latest=false
          images: |
            ${{ env.DOCKER_SERVER }}/${{ env.DOCKER_NAMESPACE }}/${{ env.DOCKER_REPOSITORY }}
          tags: |
            type=semver,pattern={{ version }}
            type=raw,value=production,enable=true

      - name: Set Image
        id: set-image
        run: |
          echo "image=${{ env.DOCKER_SERVER }}/${{ env.DOCKER_NAMESPACE }}/${{ env.DOCKER_REPOSITORY }}:${{ steps.meta.outputs.version }}" >> $GITHUB_OUTPUT

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [prepare]
    steps:
      - uses: actions/checkout@v3
      - uses: azure/docker-login@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          login-server: ${{ env.DOCKER_SERVER }}

      - uses: docker/setup-buildx-action@v2
      - uses: docker/build-push-action@v4
        with:
          push: true
          provenance: false
          context: .
          file: ./Dockerfile
          tags: ${{ needs.prepare.outputs.tags }}
          cache-from: type=gha,scope=backend
          cache-to: type=gha,scope=backend,mode=max
